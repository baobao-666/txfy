{"version":3,"sources":["components/header/Header.module.scss","view/bizChart/index.module.scss","components/News/News.module.scss","view/hotPals/index.module.scss","components/map/index.module.scss","components/trace/Trace.module.scss","components/header/Header.tsx","view/chat/index.tsx","api/http.ts","components/cityLst/index.tsx","view/hotPals/index.tsx","view/bizChart/index.tsx","components/map/index.tsx","components/trace/Trace.tsx","components/News/News.tsx","App/App.tsx","utils/rem.js","index.tsx","view/chat/index.module.scss","components/cityLst/index.module.scss","App/app.module.scss"],"names":["module","exports","Hospital","props","console","log","total","className","style","header","src","alt","jump","jump_zhuizong","text","timeNum","lastUpdateTime","totalNum","first","add","spans","chinaAdd","confirm","p","chinaTotal","span","secound","suspect","third","heal","fouth","dead","wrapper","box","Index","useState","provinces","setProvinces","useEffect","axios","post","service","args","req","func","context","channel","then","res","data","code","rsp","wrap","map","item","index","key","city","provinceName","onClick","newProvinces","active","expandProvince","icos","ico","titleCity","county","name","icon","HotPals","areaList","scale","value","type","dayAddList","dayList","dayDeadList","chinaDayAddList","forEach","push","date","chinaDayList","h3","height","forceFit","label","formatter","val","arr","slice","split","crosshairs","position","size","color","shape","stroke","lineWidth","that","window","Highcharts","Map","colorAxis","dataClasses","from","to","series","mapList","dataLabels","enabled","format","mapData","maps","joinBy","id","width","Trace","trace","setTrace","Promise","resolve","reject","jsonp","err","JSON","parse","sort","a","b","time","styles","news","titleWarp","sectionTitle","hotzhuizhong","timelineMore","timeLine","singleNew","timeIcon","times","pass","newest","newsBox","title","desc","source","ProvinceList","News","province","setProvince","items","setItems","getNews","errno","curIndex","areaTree","findIndex","curPro","provinceHtml","citytab","tap","tabtop","citychange","selectarea","onChange","e","target","changeArea","count","today","number","que","textItem","App","setTotal","setArea","setDayList","setDayAddList","setMap","setAreaTree","ret","mapsList","children","Header","length","document","docEl","documentElement","dpr","devicePixelRatio","setRemUnit","rem","clientWidth","fontSize","setBodyFontSize","body","addEventListener","persisted","fakeBody","createElement","testElement","border","appendChild","offsetHeight","classList","removeChild","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.637d539f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Ihk2\",\"jump\":\"Header_jump__3adHK\",\"jump_zhuizong\":\"Header_jump_zhuizong__24mWk\",\"text\":\"Header_text__DmzOi\",\"timeNum\":\"Header_timeNum__1y1xV\",\"totalNum\":\"Header_totalNum__2wS0e\",\"first\":\"Header_first__17X26\",\"p\":\"Header_p__2van-\",\"add\":\"Header_add__3UJTz\",\"span\":\"Header_span__2Vt1m\",\"secound\":\"Header_secound__ZgUp4\",\"third\":\"Header_third__NrYJO\",\"fouth\":\"Header_fouth__2L0Au\",\"wrapper\":\"Header_wrapper__MIY-D\",\"box\":\"Header_box__RnRRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h3\":\"bizChart_h3__2ujKp\",\"p\":\"bizChart_p__sUgMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"citytab\":\"News_citytab__2PttA\",\"tap\":\"News_tap__2wStf\",\"tabtop\":\"News_tabtop__ThgYA\",\"name\":\"News_name__1nVJK\",\"citychange\":\"News_citychange__1DWDI\",\"selectarea\":\"News_selectarea__139Mw\",\"count\":\"News_count__3K9Hl\",\"number\":\"News_number__2_bfQ\",\"add\":\"News_add__kg3np\",\"que\":\"News_que__1iB1y\",\"heal\":\"News_heal__2ZptI\",\"dead\":\"News_dead__1pZcM\",\"text\":\"News_text__2tEz3\",\"textItem\":\"News_textItem__1arbM\",\"arr\":\"News_arr__kuRex\",\"title\":\"News_title__w0f-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"hotPals_wrap__2-6Ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"map_wrap__yDPea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"Trace_news__1Afnq\",\"titleWarp\":\"Trace_titleWarp__JMfRH\",\"sectionTitle\":\"Trace_sectionTitle__180I1\",\"hotzhuizhong\":\"Trace_hotzhuizhong__2r-RV\",\"timelineMore\":\"Trace_timelineMore__1n2GM\",\"timeLine\":\"Trace_timeLine__amg_4\",\"singleNew\":\"Trace_singleNew__2ppWG\",\"timeIcon\":\"Trace_timeIcon__EvK6G\",\"times\":\"Trace_times__2obHm\",\"pass\":\"Trace_pass__JZg4B\",\"newest\":\"Trace_newest__36X0g\",\"newsBox\":\"Trace_newsBox__2YH4_\",\"title\":\"Trace_title__1VfCW\",\"desc\":\"Trace_desc__MM88_\",\"source\":\"Trace_source__3DNPM\"};","import React, {useState, useEffect} from 'react'\r\nimport {TotalType} from '../../utils/type/http'\r\nimport style from './Header.module.scss'\r\n\r\nconst Hospital = (props: {total: TotalType})=>{\r\n    console.log('total...', props.total)\r\n    return <>\r\n <div className={style.header}>\r\n     <img src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/top_headv3.png\" alt=\"\"/>\r\n<div className={style.jump}>\r\n   \r\n</div>\r\n<div className={style.jump_zhuizong}>\r\n    \r\n</div>\r\n<div className={style.text}>\r\n    <span>数据来源：国家及各地卫健委每日信息发布</span>\r\n</div>\r\n\r\n </div>\r\n <div className={style.timeNum}>\r\n统计截至{props.total&&props.total.lastUpdateTime}更新于12分钟前\r\n</div>\r\n<div className={style.totalNum}>\r\n                <div className={style.first}>\r\n                    <p className={style.add}>较上日<b className={style.spans}>+{props.total && props.total.chinaAdd.confirm}</b></p>\r\n                    <p className={style.p}>{props.total && props.total.chinaTotal.confirm}</p>\r\n                    <p className={style.span}>全国确诊</p>\r\n                </div>\r\n                <div className={style.secound}>\r\n                    <p className={style.add}>较上日<b className={style.spans}>{props.total && props.total.chinaAdd.suspect}</b></p>\r\n                    <p className={style.p}>{props.total && props.total.chinaTotal.suspect}</p>\r\n                    <p className={style.span}>疑似病例</p>\r\n                </div>\r\n                <div className={style.third}>\r\n                    <p className={style.add}>较上日<b className={style.spans}>+{props.total && props.total.chinaAdd.heal}</b></p>\r\n                    <p className={style.p}>{props.total && props.total.chinaTotal.heal}</p>\r\n                    <p className={style.span}>治愈人数</p>\r\n                </div>\r\n                <div className={style.fouth}>\r\n                    <p className={style.add}>较上日<b className={style.spans}>+{props.total && props.total.chinaAdd.dead}</b></p>\r\n                    <p className={style.p}>{props.total && props.total.chinaTotal.dead}</p>\r\n                    <p className={style.span}>死亡人数</p>\r\n                </div>\r\n            </div>\r\n            <div className={style.wrapper}>\r\n                <div className={style.box}>\r\n                    <p><img src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/icon_rili.png\" alt=\"\"/>战疫日历</p>\r\n                    <p><img src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/icon_plot.png\" alt=\"\"/>小区查询</p>\r\n                    <p><img src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/icon_train.png\" alt=\"\"/>同乘查询</p>\r\n                </div>\r\n            </div>\r\n \r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital","import React, { useState, useEffect } from 'react';\r\n\r\nimport style from './index.module.scss'\r\n\r\nimport { getHospitalProvince } from '../../api/http'\r\n\r\ninterface ProType {\r\n  provinceName: string\r\n  citys: any[],\r\n  cityCnt: number,\r\n  active?:boolean\r\n}\r\nconst Index = () => {\r\n  // 定义全国医院数据\r\n  let [provinces, setProvinces] = useState<ProType[]>([]);\r\n\r\n  // 获取全国医院数据\r\n  useEffect(() => {\r\n    getHospitalProvince().then((res: any) => {\r\n      res = res.data;\r\n      console.log(res);\r\n\r\n      if (res.code === 0) {\r\n        setProvinces(res.args.rsp.provinces);\r\n      }\r\n    })\r\n  }, []);\r\n  const expandProvince = (index: number)=>{\r\n    let newProvinces = [...provinces];\r\n    newProvinces[index].active = !provinces[index].active;\r\n    setProvinces(newProvinces)\r\n}\r\n  return (\r\n    <div className={style.wrap}>\r\n      {\r\n        provinces.map((item, index) => {\r\n          return <div className={style.item} key={index} >\r\n            <div className={style.city} >{item.provinceName}</div>\r\n            <div onClick={() =>{expandProvince(index)}} className={item.active ? style.icos : style.ico} ></div>\r\n          </div>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;","import axios from 'axios'\r\nimport jsonp from 'jsonp'\r\nimport { TruthType } from '../utils/type/http';\r\n\r\n\r\nconst factHost = '//fact.txxg.jasonandjay.com'; // '/fact'\r\nconst apiHost = '//api.txxg.jasonandjay.com'; // '/api'\r\nconst wechatHost = '//wechat.txxg.jasonandjay.com'; // '/fact'\r\nconst inewsHost = 'https://view.inews.qq.com'; // '/fact'\r\n\r\nexport const getHospitalProvince = ()=>{\r\n    return axios.post(`${wechatHost}/api/THPneumoniaService/getHospitalProvince`,{\r\n        service: 'THPneumoniaOuterService',\r\n        args: {req:{}},\r\n        func: 'getHospitalProvince',\r\n        context: {channel: 'AAEEviDRbllNrToqonqBmrER'}\r\n    })\r\n}\r\n\r\n// 获取分页辟谣信息列表\r\nexport const getTruth = (params: TruthType = {page:0})=>{\r\n    return new Promise((resolve, reject)=>{\r\n        jsonp(`${factHost}/loadmore?page=${params.page}`, {}, (err, data)=>{\r\n            if (err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n// 获取疫情最新进展\r\nexport const getTrace = ()=>{\r\n    return new Promise((resolve, reject)=>{\r\n        jsonp(`${inewsHost}/g2/getOnsInfo?name=wuwei_ww_time_line`, {}, (err, data)=>{\r\n            if (err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n// 最新疫情数据\r\nexport const getDisease = ()=>{\r\n    return new Promise((resolve, reject)=>{\r\n        jsonp(`${inewsHost}/g2/getOnsInfo?name=disease_h5`, {}, (err, data)=>{\r\n            if (err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n// 省份疫情防治列表\r\nexport const getProvinceNews = (code: string)=>{\r\n    return axios.post(`${apiHost}/news/v1/province/news/list?province_code=`+code)\r\n}","import React from 'react';\r\n\r\nimport style from './index.module.scss'\r\n\r\ninterface totals {\r\n    confirm: number,\r\n    suspect: number,\r\n    dead: number,\r\n    heal: number\r\n}\r\n\r\ninterface cityItem {\r\n    name: string,\r\n    total: totals\r\n}\r\n\r\nconst Index = (props: cityItem) => {\r\n    return (\r\n        <div className={style.titleCity}>\r\n            <div className={style.county} >{props.name}</div>\r\n            <div className={style.data} >\r\n                <span>{props.total.dead}</span>\r\n                <span>{props.total.confirm}</span>\r\n                <span>{props.total.heal}</span>\r\n                <span>{props.total.suspect}</span>\r\n            </div>\r\n            <div className={style.ico} >\r\n                <div className={style.icon} ></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index","import React from 'react'\r\n\r\nimport style from './index.module.scss'\r\n\r\nimport { AreaType } from '../../utils/type/http'\r\n\r\nimport CityItem from '../../components/cityLst/index'\r\n\r\nconst HotPals = (props: { areaList: AreaType[] }) => {\r\n    return (\r\n        <div className={style.wrap} >\r\n            {\r\n                props.areaList.map((item, index) => {\r\n                    return <div key={index} >\r\n                        <CityItem name={item.name} total={item.total}></CityItem>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HotPals","import React from 'react';\r\n\r\nimport {\r\n    Chart,\r\n    Geom,\r\n    Axis,\r\n    Tooltip,\r\n    Legend,\r\n  } from \"bizcharts\";\r\n\r\n  import style from './index.module.scss'\r\n\r\ninterface ProType {\r\n    chinaDayAddList: Array<{\r\n        date: string,\r\n        confirm: string,\r\n        suspect: string,\r\n        dead: string,\r\n        heal: string\r\n    }>,\r\n    chinaDayList: Array<{\r\n        date: string,\r\n        confirm: string,\r\n        suspect: string,\r\n        dead: string,\r\n        heal: string\r\n    }>\r\n}\r\n\r\nconst Hospital = (props: ProType)=>{\r\n    console.log('props...', props);\r\n    // debugger;\r\n\r\n    const scale = {\r\n        value: {\r\n            type: 'linear',\r\n        }\r\n    }\r\n    let dayAddList:Array<{}> = [], dayList:Array<{}> = [], dayDeadList:Array<{}> = [];\r\n    props.chinaDayAddList.forEach(item=>{\r\n        dayAddList.push({\r\n            date:item.date,\r\n            type: '确诊人数',\r\n            value: item.confirm\r\n        },{\r\n            date:item.date,\r\n            type: '疑似人数',\r\n            value: item.suspect\r\n        })\r\n    })\r\n    props.chinaDayList.forEach(item=>{\r\n        dayList.push({\r\n            date:item.date,\r\n            type: '确诊人数',\r\n            value: item.confirm\r\n        },{\r\n            date:item.date,\r\n            type: '疑似人数',\r\n            value: item.suspect\r\n        })\r\n        dayDeadList.push({\r\n            date:item.date,\r\n            type: '治愈人数',\r\n            value: item.heal\r\n        },{\r\n            date:item.date,\r\n            type: '死亡人数',\r\n            value: item.dead\r\n        })\r\n    })\r\n    return <>\r\n        {/* 疫情新增趋势（人） */}\r\n        <section>\r\n            <h3 className ={style.h3} >疫情新增趋势（人）</h3>\r\n            <Chart height={400} data={dayAddList} scale={scale} forceFit>\r\n                <Legend />\r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n        </section>\r\n        {/* 累计确诊疑似趋势（人） */}\r\n        <section>\r\n        <h3  className ={style.h3} > 累计确诊疑似趋势（人）</h3>\r\n            <Chart height={400} data={dayList} scale={scale} forceFit>\r\n                <Legend />\r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n        </section>\r\n        {/* 累计治愈死亡趋势（人） */}\r\n        <section>\r\n        <h3  className ={style.h3} >疫情新增趋势</h3>\r\n            <Chart height={400} data={dayDeadList} scale={scale} forceFit>\r\n                <Legend />\r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n        </section>\r\n        <p  className ={style.p} >数据来源：国家卫健委官网发布，每日更新一次</p>\r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital\r\n","import React, { useEffect } from 'react';\r\n\r\nimport style from './index.module.scss';\r\n\r\ninterface PropType {\r\n    mapList: Array<{\r\n        name: string,\r\n        value: string\r\n    }>\r\n}\r\n\r\n\r\n\r\nconst Index = (props: PropType) => {\r\n\r\n    let that: any = window;\r\n    useEffect(() => {\r\n        new that.Highcharts.Map('map', {\r\n            colorAxis: {\r\n                dataClasses: [{\r\n                    color: '#FFEFD7',\r\n                    from: 1,\r\n                    name: '1-9人',\r\n                    to: 9\r\n                }, {\r\n                    color: '#FFD2A0',\r\n                    from: 10,\r\n                    name: '10-99人',\r\n                    to: 90\r\n                }, {\r\n                    color: '#FE8664',\r\n                    from: 100,\r\n                    name: '100-499人',\r\n                    to: 499\r\n                }, {\r\n                    color: '#E64B47',\r\n                    from: 500,\r\n                    name: '500-999人',\r\n                    to: 999\r\n                }, {\r\n                    color: '#C91014',\r\n                    from: 1000,\r\n                    name: '1000-9999人',\r\n                    to: 9999\r\n                }, {\r\n                    color: '#9C0A0D',\r\n                    from: 10000,\r\n                    name: '10000人以上'\r\n                }]\r\n            },\r\n            series: [{\r\n                data: props.mapList,\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    format: '{point.name}'\r\n                },\r\n                name: '确诊',\r\n                mapData: that.Highcharts.maps['cn/china'],\r\n                joinBy: 'name' // 根据 name 属性进行关联\r\n            }]\r\n        });\r\n    }, [props.mapList, that.Highcharts.Map, that.Highcharts.maps]);\r\n\r\n    return (\r\n        <div className={style.wrap}>\r\n            <div id=\"map\" style={{ width: '375px', height: '375px' }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index","import React, { useState, useEffect } from 'react'\r\nimport { getTrace } from '../../api/http'\r\nimport styles from './Trace.module.scss'\r\ninterface TraceType {\r\n    time: string,\r\n    create_time: string,\r\n    source: string,\r\n    desc: string,\r\n    title: string\r\n}\r\n\r\nconst Trace = () => {\r\n    // 定义最新进展\r\n    let [trace, setTrace] = useState<TraceType[]>([]);\r\n\r\n    // 获取最新进展数据\r\n    useEffect(() => {\r\n        getTrace().then((res: any) => {\r\n            let data = JSON.parse(res.data) as TraceType[];\r\n            data.sort((a, b) => {\r\n                if (a.time > b.time) {\r\n                    return -1;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            })\r\n            setTrace(data);\r\n        })\r\n    }, []);\r\n\r\n\r\n    return <div className={styles.news}>\r\n        <div className={styles.titleWarp}>\r\n            <div className={styles.sectionTitle}>最新进展\r\n                <div className={styles.hotzhuizhong}>\r\n                    <div>\r\n                        <span className={styles.timelineMore}></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.timeLine}></div>\r\n            {\r\n                trace.map((item, index) => {\r\n                    return <div className={styles.singleNew} key={index}>\r\n                        <div className={styles.timeIcon}></div>\r\n                        <div className={styles.times} >\r\n                            {/* 时间 */}\r\n                            <span className={styles.pass}>{item.time}</span>\r\n                            <div className={styles.newest}></div>\r\n                        </div>\r\n                        <div className={styles.newsBox}>\r\n                            {/* 标题 */}\r\n                            <div className={styles.title}>{item.title}</div>\r\n                            {/* 内容 */}\r\n                            <div className={styles.desc}>{item.desc}</div>\r\n                            {/* 来源 */}\r\n                            <div className={styles.source}>{item.source}</div>\r\n                        </div>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Trace\r\n","import React, { useState, useEffect } from 'react'\r\nimport {getProvinceNews} from '../../api/http'\r\nimport {AreaType} from '../../utils/type/http'\r\nimport style from './News.module.scss'\r\n\r\ninterface ProvinceType{\r\n    [key: string]: string\r\n}\r\ninterface ItemType{\r\n    \"title\": string,\r\n    \"publish_time\": string,\r\n    \"news_url\": string,\r\n    \"cms_id\": string\r\n}\r\nconst ProvinceList:ProvinceType = {\r\n    \"hb\": \"湖北\",\r\n    \"zj\": \"浙江\",\r\n    \"gd\": \"广东\",\r\n    \"henan\": \"河南\",\r\n    \"hn\": \"湖南\",\r\n    \"ah\": \"安徽\",\r\n    \"jiangxi\": \"江西\",\r\n    \"cq\": \"重庆\",\r\n    \"jiangsu\": \"江苏\",\r\n    \"cd\": \"四川\",\r\n    \"sd\": \"山东\",\r\n    \"bj\": \"北京\",\r\n    \"sh\": \"上海\",\r\n    \"fj\": \"福建\",\r\n    \"heilongjiang\": \"黑龙江\",\r\n    \"xian\": \"陕西\",\r\n    \"guangxi\": \"广西\",\r\n    \"hebei\": \"河北\",\r\n    \"yn\": \"云南\",\r\n    \"hainan\": \"海南\",\r\n    \"ln\": \"辽宁\",\r\n    \"shanxi\": \"山西\",\r\n    \"tj\": \"天津\",\r\n    \"guizhou\": \"贵州\",\r\n    \"gansu\": \"甘肃\",\r\n    \"jilin\": \"吉林\",\r\n    \"neimenggu\": \"内蒙古\",\r\n    \"ningxia\": \"宁夏\",\r\n    \"xinjiang\": \"新疆\",\r\n    \"hk\": \"香港\",\r\n    \"qinghai\": \"青海\",\r\n    \"taiwan\": \"台湾\",\r\n    \"macau\": \"澳门\",\r\n    \"xizang\": \"西藏\"\r\n}\r\n\r\n\r\nconst News = (props: {areaTree: AreaType[]}) => {\r\n    let [province, setProvince] = useState<string>('hb');\r\n    let [items, setItems] = useState<ItemType []>([])\r\n\r\n    let changeArea = (e:React.ChangeEvent<HTMLSelectElement>)=>{\r\n        setProvince(e.target.value);\r\n        getNews();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getNews();\r\n    }, [])\r\n\r\n    const getNews = ()=>{\r\n        getProvinceNews(province).then((res:any)=>{\r\n            res = res.data;\r\n            if (res.errno === 0){\r\n                setItems(res.data.items);\r\n            }\r\n        })\r\n    }\r\n\r\n   // console.log('news...', items);\r\n\r\n    let curIndex = props.areaTree.findIndex(item=>item.name === ProvinceList[province]);\r\n    let curPro = props.areaTree[curIndex];\r\n\r\n    // 拼接各省份选项\r\n    const provinceHtml = [];\r\n    for (let key in ProvinceList){\r\n        provinceHtml.push(<option key={ProvinceList[key]} value={key}>{ProvinceList[key]}</option>);\r\n    }\r\n    return <>\r\n    <div className={style.citytab}>\r\n        <div className={style.tap}>\r\n        <div className={style.tabtop}>\r\n             <span className={style.name}>{ProvinceList[province]}</span>\r\n                疫情速报\r\n          </div>\r\n          <div className={style.citychange}>\r\n            <select id={style.selectarea} onChange={(e:React.ChangeEvent<HTMLSelectElement>)=>changeArea(e)}>\r\n                <option value=\"hb\">切换城市</option>\r\n                {provinceHtml}\r\n            </select>\r\n        </div>\r\n        </div>\r\n        <div className={style.count}>\r\n            <li>\r\n                <span className={style.add}>{curPro && curPro.today.confirm}</span>\r\n                <span className={style.number}>新增确诊</span>\r\n            </li>\r\n            <li>\r\n                <span className={style.que}>{curPro && curPro.total.confirm}</span>\r\n                <span className={style.number}>累计确诊</span>\r\n            </li>\r\n            <li>\r\n                <span className={style.heal}>{curPro && curPro.total.heal}</span>\r\n                <span className={style.number}>治愈人数</span>\r\n            </li>\r\n            <li>\r\n                <span className={style.dead}>{curPro && curPro.total.dead}</span>\r\n                <span className={style.number}>死亡人数</span>\r\n            </li>\r\n        </div>\r\n        <div className={style.text}>\r\n            {\r\n               items.map((item,index)=>{\r\n                   return(\r\n                  <div className={style.textItem} key={index}>\r\n                      <div className={style.arr}></div> \r\n                      <div className={style.title}>\r\n                          <i></i>\r\n                          {item.title}\r\n                          </div>\r\n                     \r\n                  </div>\r\n                   )\r\n               \r\n               }) \r\n            }\r\n        </div>\r\n</div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default News\r\n","import React, { useState, useEffect } from 'react';\nimport style from './app.module.scss';\n\nimport { AreaType, TotalType } from '../utils/type/http'\nimport { getDisease } from '../api/http'\n\n\n// 头部组件\nimport HeaderCode from '../components/header/Header'\n\n// 全国医院\nimport ChatCode from '../view/chat/index'\n\n//全国实时数据\nimport HotPals from '../view/hotPals/index'\n\n// 图表组件\nimport BizChart from '../view/bizChart/index'\n\n//地图组件\nimport MapCode from '../components/map/index'\n\n// 最新进展\nimport Trace from '../components/trace/Trace'\n\n// 疫情速报\nimport Newms from '../components/News/News'\n\nconst App = () => {\n  let [total, setTotal] = useState<TotalType>();\n  //热门医院数据\n  let [areaList, setArea] = useState<AreaType[]>([])\n  //每日数据\n  let [dayList, setDayList] = useState([]);\n  //每日新增数据\n  let [dayAddList, setDayAddList] = useState([]);\n  //地图数据\n  let [mapList,setMap] =useState([]);\n\n  let [areaTree, setAreaTree] = useState<AreaType[]>([]);\n\n  useEffect(() => {\n    getDisease().then((res: any) => {\n      console.log('res', res)\n      if (res.ret === 0) {\n        let data = JSON.parse(res.data);\n        let { chinaTotal, chinaAdd, lastUpdateTime, areaTree, chinaDayList, chinaDayAddList } = data;\n        setTotal({ chinaTotal, chinaAdd, lastUpdateTime });\n        setArea(areaTree);\n        setDayList(chinaDayList);\n        setAreaTree(areaTree)\n        setDayAddList(chinaDayAddList);\n        let mapsList = areaTree[0].children.map((item:any)=>{\n            return {\n              name: item.name,\n              value: item.total.confirm\n           }\n        });\n        setMap(mapsList)\n      }\n    })\n  }, [])\n  return (\n    <>\n      <HeaderCode  total={total as TotalType} ></HeaderCode>\n      <MapCode mapList={mapList} ></MapCode>\n      <div className={style.titleCity}>\n        <div className={style.county} >地区</div>\n        <div className={style.data} >\n          <span>新增确诊</span>\n          <span>累计确诊</span>\n          <span>治愈</span>\n          <span>死亡</span>\n        </div>\n        <div className={style.ico} ></div>\n      </div>\n      <HotPals areaList={areaList.length ? areaList[0].children as AreaType[] : []} ></HotPals>\n      <Newms areaTree={areaTree.length?areaTree[0].children as AreaType[]:[]} ></Newms>\n      <BizChart chinaDayAddList={dayAddList} chinaDayList={dayList}  ></BizChart>\n       <Trace></Trace>\n      <ChatCode></ChatCode>\n    </>\n  );\n}\n\nexport default App;\n","export default (function flexible (window, document) {\r\n    var docEl = document.documentElement\r\n    var dpr = window.devicePixelRatio || 1\r\n  \r\n    // adjust body font size\r\n    function setBodyFontSize () {\r\n      if (document.body) {\r\n        document.body.style.fontSize = (12 * dpr) + 'px'\r\n      }\r\n      else {\r\n        document.addEventListener('DOMContentLoaded', setBodyFontSize)\r\n      }\r\n    }\r\n    setBodyFontSize();\r\n  \r\n    // set 1rem = viewWidth / 10\r\n    function setRemUnit () {\r\n      var rem = docEl.clientWidth / 10\r\n      docEl.style.fontSize = rem + 'px'\r\n    }\r\n  \r\n    setRemUnit()\r\n  \r\n    // reset rem unit on page resize\r\n    window.addEventListener('resize', setRemUnit)\r\n    window.addEventListener('pageshow', function (e) {\r\n      if (e.persisted) {\r\n        setRemUnit()\r\n      }\r\n    })\r\n  \r\n    // detect 0.5px supports\r\n    if (dpr >= 2) {\r\n      var fakeBody = document.createElement('body')\r\n      var testElement = document.createElement('div')\r\n      testElement.style.border = '.5px solid transparent'\r\n      fakeBody.appendChild(testElement)\r\n      docEl.appendChild(fakeBody)\r\n      if (testElement.offsetHeight === 1) {\r\n        docEl.classList.add('hairlines')\r\n      }\r\n      docEl.removeChild(fakeBody)\r\n    }\r\n  }(window, document))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assert/reset.scss';\nimport App from './App/App';\nimport './utils/rem'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"chat_wrap__39zgD\",\"item\":\"chat_item__4ux5h\",\"city\":\"chat_city__3GIX5\",\"ico\":\"chat_ico__2Cab1\",\"icos\":\"chat_icos__2jiZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleCity\":\"cityLst_titleCity__2aGA8\",\"county\":\"cityLst_county__1Nbk7\",\"data\":\"cityLst_data__3QBWS\",\"ico\":\"cityLst_ico__1_vwQ\",\"icon\":\"cityLst_icon__15TMm\",\"icos\":\"cityLst_icos__12d8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleCity\":\"app_titleCity__nwCV0\",\"county\":\"app_county__3SXXY\",\"data\":\"app_data__5_6jJ\",\"ico\":\"app_ico__8eGYa\"};"],"sourceRoot":""}